(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{515:function(t,a,s){"use strict";s.r(a);var v=s(6),n=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"net代码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#net代码规范"}},[t._v("#")]),t._v(" .Net代码规范")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%89%8D%E8%A8%80"}},[t._v("前言")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83"}},[t._v("命名规范")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%B8%83%E5%B1%80%E8%A7%84%E8%8C%83"}},[t._v("布局规范")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E7%BC%A9%E8%BF%9B"}},[t._v("代码缩进")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E6%8D%A2%E8%A1%8C"}},[t._v("代码换行")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E7%A9%BA%E6%A0%BC"}},[t._v("代码空格")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E6%8B%AC%E5%8F%B7%E5%B0%8F%E6%8B%AC%E5%8F%B7%E5%A4%A7%E6%8B%AC%E5%8F%B7"}},[t._v("代码括号(小括号)、{大括号}")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%B3%A8%E9%87%8A"}},[t._v("注释")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%BB%BA%E8%AE%AE%E7%B1%BB%E5%9E%8B%E6%88%90%E5%91%98%E7%9A%84%E6%8E%92%E5%88%97%E9%A1%BA%E5%BA%8F"}},[t._v("【建议】类型成员的排列顺序")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83"}},[t._v("编码规范")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E8%A7%84%E8%8C%83"}},[t._v("异常处理规范")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%AE%89%E5%85%A8%E8%A7%84%E8%8C%83"}},[t._v("安全规范")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%89%8D%E5%90%8E%E7%AB%AF%E8%A7%84%E8%8C%83"}},[t._v("前后端规范")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%BC%96%E7%A0%81%E6%8E%A8%E8%8D%90"}},[t._v("编码推荐")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%89%88%E6%9C%AC%E5%8E%86%E5%8F%B2"}},[t._v("版本历史")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8F%82%E8%80%83"}},[t._v("参考")])])]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("本版本为：20.08.27.01"),s("br"),t._v(" "),s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("为强制按照规范运行"),s("br"),t._v(" "),s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("为推荐按照规范运行")]),t._v(" "),s("h2",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("blockquote",[s("p",[t._v("说明：命名使用三种格式")]),t._v(" "),s("ol",[s("li",[t._v("Pascal：每个单词的首字母大写。")]),t._v(" "),s("li",[t._v("Camel：第一个单词的首字母小写，其它单词首字母大写。")]),t._v(" "),s("li",[t._v("大写：全大写，单词之间使用下划线“_”连接。")])])]),t._v(" "),s("p",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("下表格为针对不同项目制定的规范")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("项目")]),t._v(" "),s("th",[t._v("规范")]),t._v(" "),s("th",[t._v("例子")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("class")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("ActionAuthen")]),t._v(" "),s("td",[t._v("抽象类，使用Abstract或者Base为后缀;异常类，以Exception为后缀，Controller BLL DLL Model 同理")])]),t._v(" "),s("tr",[s("td",[t._v("interface")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("IActionAuthen")]),t._v(" "),s("td",[t._v("以I开头")])]),t._v(" "),s("tr",[s("td",[t._v("struct")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("Integer")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("enum")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("LogLevel")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("namespace")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("System.Collections.Generic")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("method")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("ToString()")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("委托")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("以EventHandler作为后缀名")])]),t._v(" "),s("tr",[s("td",[t._v("事件")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("以其对应的委托类型，去掉EventHandler后缀，添加On前缀")])]),t._v(" "),s("tr",[s("td",[t._v("属性")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("public string FirstName { get; set; }")]),t._v(" "),s("td",[t._v("传回前端json的时候使用的是小驼峰风格，见"),s("a",{attrs:{href:"#%E5%89%8D%E5%90%8E%E7%AB%AF%E8%A7%84%E8%8C%83"}},[t._v("前后端规范")]),t._v("的第5条，这时候考虑使用全局的序列化设置来改变")])]),t._v(" "),s("tr",[s("td",[t._v("静态变量")]),t._v(" "),s("td",[t._v("Pascal")]),t._v(" "),s("td",[t._v("public static string FirstName;")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("参数")]),t._v(" "),s("td",[t._v("Camel")]),t._v(" "),s("td",[t._v("ToString(int studentName)")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("常量")]),t._v(" "),s("td",[t._v("大写")]),t._v(" "),s("td",[t._v("const int TRUN_OFF = 0")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("字段（成员变量）以及局部变量")]),t._v(" "),s("td",[t._v("Camel")]),t._v(" "),s("td",[t._v("int studentName")]),t._v(" "),s("td",[t._v("-")])])])]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("变量命名不要怕多，尽量减少缩写")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("如果使用缩写，比如YunXi.Advertisement -> YX.AD，缩写是必须写成大写，并且缩写必须是大家熟知的名称，不能自己定义缩写。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("由于c#是大小写敏感的，不要使用仅仅是区分大小写的名称，如 int a = 0, A = 1;。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("在命名时需要使用有意义的名称，优先使用英文，如果英文没有合适的单词，可以使用拼音，如城市名称等，禁止使用中文英文混合命名")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("命名变量的时候，使用名词形式，不要使用动词，并且在变量的末尾可以加上List、Dic、Queue、Time等表示类型的名词。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("不使用前缀_来命名私有变量")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("类名、接口名如果使用了设计模式，可以加上设计模式的名称提高可读性，如： OrderFactory、LoginProxy")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("接口类中的方法和属性不要加任何修饰符号（public 也不要加），保持代码的简洁性，并加上有效的注释")])]),t._v(" "),s("h2",{attrs:{id:"布局规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局规范"}},[t._v("#")]),t._v(" 布局规范")]),t._v(" "),s("h3",{attrs:{id:"代码缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码缩进"}},[t._v("#")]),t._v(" 代码缩进")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("使用四个空格来代替Tab，一个缩进指代4个空格")])]),t._v(" "),s("h3",{attrs:{id:"代码换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码换行"}},[t._v("#")]),t._v(" 代码换行")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("单行代码限制在120个字符，超长处理：\n第二行相对第一行缩进4空格，从第三行开始保持和第二行一致。\n运算符及方法调用“.”需要跟随换行，但逗号不需要。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("不同逻辑的代码之间可以插入一个空行来区分，提高可读性。任何时候都没有必要增加多个空行。")])]),t._v(" "),s("h3",{attrs:{id:"代码空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码空格"}},[t._v("#")]),t._v(" 代码空格")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("关键字 和 左括符“(”"),s("span",{staticStyle:{color:"#1ca029"}},[t._v("添加")]),t._v("空格。正例：if (...)")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("方法名 和 左括符“(”"),s("span",{staticStyle:{color:"#ff0000"}},[t._v("禁止")]),t._v("空格。正例：void SetName(...)")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("多个参数用逗号分隔，逗号后需要"),s("span",{staticStyle:{color:"#1ca029"}},[t._v("添加")]),t._v("一个空格。正例：void Main(int i, int a)")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("除了“.”之外，所有二元操作符前后需要"),s("span",{staticStyle:{color:"#1ca029"}},[t._v("添加")]),t._v("一个空格。正例：int r = a + b; // 等号和加号前后均有空格")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("一元操作符、++、--"),s("span",{staticStyle:{color:"#ff0000"}},[t._v("禁止")]),t._v("用空格分隔。正例：++a;")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("注释符//后"),s("span",{staticStyle:{color:"#1ca029"}},[t._v("添加")]),t._v("一个空格。正例：// 只有一个空格")])]),t._v(" "),s("h3",{attrs:{id:"代码括号-小括号-、-大括号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码括号-小括号-、-大括号"}},[t._v("#")]),t._v(" 代码括号(小括号)、{大括号}")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("在没有必要的时候，不要在返回语句中使用括号()。 正例：return a + b;")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("左花括号放在关键字或者方法名下一行，左右花括号对齐，括号内容为空时可在一行")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("if、while、do语句后一定要使用{}，即使{}中为空或只有一条语句。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v('左小括号和字符之间不出现空格；同样，右小括号和字符之间也不出现空格；而左大括号前需要空格。正例：if(s = "str"){ }; var list = new List'),s("int",[t._v("(){ 1 };")])],1),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("在进行类型强制转换时，右括号与强制转换值之间不需要任何空格隔开")])]),t._v(" "),s("p",[t._v("代码正例：")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 代码规范例子")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Demo")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 打印字符串")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="s1">字符串1</param>')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="s2">字符串2</param>')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="lo">长整型</param>')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PrintString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")])]),t._v(" lo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释文字与注释符之间添加一个空格")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缩进四个空格")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"打印"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if关键词后有一个空格；左小括号后无空格，右小括号前无空格；二元运算符==的前后有空格")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 大括号换行，与关键词缩进一致；if之后的语句即便只有一句话也要加上大括号")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左大括号后有空格，右大括号前有空格")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长整型赋值使用大写L")]),t._v("\n            lo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("547L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型强制转换的右小括号与被转化变量之间无空格")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("lo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])]),s("h2",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("类、属性、方法要有"),s("code",[t._v("///")]),t._v("xml注释，类注释写上简述、方法注释写上方法的作用、所需参数、返回值、修改简述等")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("类、属性、方法xml注释添加、创建时间、创建人、修改时间、修改人等")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("枚举类要注释上每个枚举值的具体含义")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("注释要与时俱进，修改了什么要及时完善注释")])]),t._v(" "),s("h3",{attrs:{id:"【建议】类型成员的排列顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【建议】类型成员的排列顺序"}},[t._v("#")]),t._v(" 【建议】类型成员的排列顺序")]),t._v(" "),s("ol",[s("li",[t._v("字段：public、protected、private")]),t._v(" "),s("li",[t._v("属性：public、protected、private")]),t._v(" "),s("li",[t._v("事件：public、protected、private")]),t._v(" "),s("li",[t._v("构造函数：参数越多，排的越靠前")]),t._v(" "),s("li",[t._v("方法：参数越多，排的越靠前")]),t._v(" "),s("li",[t._v("当一个类有多个构造方法，或者多个同名方法，这些方法应该按顺序放置在一起，便于阅读，此条规则优先于以上5条")]),t._v(" "),s("li",[t._v("类内部排序：字段、属性、构造函数、方法")])]),t._v(" "),s("h2",{attrs:{id:"编码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码规范"}},[t._v("#")]),t._v(" 编码规范")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("总是使用C#预定义的类型，而不是使用System命名空间中的别名，使用string，而不是String")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("不要在命名空间内使用using语句，详见：[https://stackoverflow.com/questions/125319/should-using-directives-be-inside-or-outside-the-namespace]")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("避免在同一个文件中放置多个类，Model类除外")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("接口返回值使用json的属性（attribute），而不是重新映射，使用JsonIgnore、JsonProperty等")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("不要对数值进行硬编码，通过声明一个常量来代替该数值")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("bool值的判断使用值本身，不要使用==，if(a == false) -> if(!a)")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("方法的参数数量不要太多，最多不要大于10个")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("正确区分使用private、protected、public，一个类的public属性或方法越多，耦合性越高。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("long型赋值使用L而不是l，小写容易与1搞混。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("double会导致精度丢失，如果要比较两个double相等，必须指定一个精度，使用差值，如果插值小于精度就可以认为两数相等；double转decimal有神奇的效果，0.3d和0.30000000000000004d转成decimal都是0.3M，应当注意。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("引用第三方库，应使用Nuget，不要使用本地的第三方库。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("Tuple类型的使用不要用Item1、Item2来接收，要使用有意义的命名来接收")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("所有的方法如果不再使用，但又有可能影响其它方法，必须要标注为"),s("code",[t._v("[Obsolete]")]),t._v("，并且要写上建议的替换方法，以及有可能的最终废弃日期")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("正在使用的代码里不要调用标注为废弃（[Obsolete]）的代码")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("注意浅拷贝和深拷贝的区别，以及使用方式。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("使用GroupBy、Distinct等方法的时候，如果使用class类来做主键，必须重写HashCode()和Equals(object obj)，要不然聚合或者去重的依据就成了内存地址而不是预期的值。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("在高并发场景中，避免使用”等于”判断作为中断或退出的条件，如果并发控制没有处理好，容易产生等值判断被“击穿”的情况，使用大于或小于的区间判断条件来代替。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("资源代码例如Stream，请使用using语句来释放，而不要手动的dispose。")])]),t._v(" "),s("h2",{attrs:{id:"异常处理规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理规范"}},[t._v("#")]),t._v(" 异常处理规范")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("避免在循环体内使用try-catch语句，必要时才这么干。catch是一个非常耗性能的操作。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("不要使用异常来实现业务逻辑、流程控制、条件控制，理由同上，这些都可以使用各种流程控制语句来避免。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("捕获异常的时候，应该捕获具体的异常，而不是直接捕获一个总的exception，这样有可能会找不到具体的错误。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("异常处理应该交由上层代码或者全局异常过滤器来处理，底层代码的异常应该全部抛出，除非有特殊情况。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("不应该在大段代码上捕获异常，这是不负责任的表现")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("捕获了代码要进行处理，要不然不要try-catch又或者catch了代码又throw出去。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v('打印日志时使用参数化方法，不要使用字符串内插。正例：Logger.Error(ex, "{0}报错", "例子");')]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("为了防止null错误，如果方法的返回值可能返回null，应该加上注释来告诉调用者及时处理null问题。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("对外的接口，请指定错误码；对内的应用，请抛出错误信息。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("对于logger的使用，不要使用第三方的日志接口，只使用框架自带的ILogger或者ILoggerFactory，第三方的日志注入到框架中。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("注意日志的级别，从高到低为：Fatal、Error、Warning、Information、Debug、Trace，其中，Fatal为框架级别的日志，业务代码中不要使用，Debug为日常调试使用、Trace可以记录一些Debug不方便记录的超长日志，这两个个级别的日志在生产环境不要使用，可以使用预编译的#if来避免出现在生产环境，Information为记录程序运行情况、在生产环境中谨慎输出日志，Warning日志记录一些特殊情况以及特别注意的程序运行节点信息，还可以记录不影响程序运行的错误信息，比如用户的输入等，Error级别的日志记录影响生产环境的具体情况、程序的启动关闭信息也建议使用Error级别。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("重要日志保留6个月以上。")])]),t._v(" "),s("h2",{attrs:{id:"安全规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全规范"}},[t._v("#")]),t._v(" 安全规范")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("个人用户页面或者接口，必须进行权限控制，避免水平越权")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("用户敏感信息要进行脱敏操作，例如手机号、身份证号、微信号、邮箱等")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("用户传入的参数要进行严格校验，例如：避免PageSize过大、恶意OrderBy、输入Sql注入语句。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("为了防止sql注入，不要直接使用用户的输入参数来拼接sql语句。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("拥有限制资源的接口，应该做对应的限制，比如说登录获取验证码、获取短信、邮件、支付等，防止有限资源被消耗，或者被调用人利用造成对其他人的电话攻击等。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("用户输入信息要进行风控，防止出现违禁词。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("注意CSRF安全验证、iframe嵌套验证")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("部署服务器要注意把Response里的Server信息隐藏掉")])]),t._v(" "),s("h2",{attrs:{id:"前后端规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端规范"}},[t._v("#")]),t._v(" 前后端规范")]),t._v(" "),s("ol",[s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("前后端交互的API需要明确协议、域名、路径、请求方法、请求内容、状态码、响应体。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("定义路径、接口名时，不要使用大写，多个单词需要分割的时候用下划线，由于Linux大小写敏感，后端的资源处理为大小写都可访问的")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("前后端数据列表相关的接口返回，如果为空，则返回空数组[]或空集合{}，此条约定有利于数据层面上的协作更加高效，减少前端很多琐碎的 null 判断。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("服务端发生错误时，返回给前端的响应信息必须包含 HTTP 状态码，错误码、错误信息、用户提示信息四个部分。四个部分的涉众对象分别是浏览器、前端开发、错误排查人员、用户。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("在前后端交互的 JSON 格式数据中，所有的 key 必须为小写字母开始的Camel风格，符合英文表达习惯，且表意完整")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#ff0000"}},[t._v("【强制】")]),t._v("对于需要使用超大整数的场景，服务端一律使用 string 字符串类型返回，禁止使用Long类型，这是由于前端会解析成Number类型（同后端的Double类型），这个类型存在误差，会有精度损失，比如后端传给前端362909601374617692，前端只能接收到362909601374617660。")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("后端要注意前端传入的超大内容，nginx默认1MB，超出报错，如果超出，及时调整默认配置")]),t._v(" "),s("li",[s("span",{staticStyle:{color:"#1ca029"}},[t._v("【建议】")]),t._v("Get方法要注意Url的长度，不同浏览器支持的长度不一致，最好不要超过2048个字符。")])]),t._v(" "),s("h2",{attrs:{id:"编码推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码推荐"}},[t._v("#")]),t._v(" 编码推荐")]),t._v(" "),s("blockquote",[s("p",[t._v("以下下是针对编码可读性、效率的一些推荐，大家可以多多添加")])]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/farmer-y/category/1122939.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("编写高质量代码改善C#程序的157个建议"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("由于超过2000行的程序难以阅读，应该尽量避免出现超过2000行的类，500行以上的方法")]),t._v(" "),s("li",[t._v("局部变量应该就近声明，避免在很远的地方再使用")]),t._v(" "),s("li",[t._v("相同的功能复制其它地方的代码的时候，应该考虑重构")]),t._v(" "),s("li",[t._v("善用#region，使代码可读性更高")]),t._v(" "),s("li",[t._v("注意string和StringBuilder的使用情况，详见：[https://www.cnblogs.com/farmer-y/p/7919222.html]")]),t._v(" "),s("li",[t._v("checked和unchecked用于整形运算中的溢出检查，如果不指定checked，一般的环境是不检查溢出的，即溢出也不会产生错误")]),t._v(" "),s("li",[t._v("集合（List, HashSet, Dictionary等）指定初始大小，避免频繁扩容")]),t._v(" "),s("li",[t._v("区分计算密集型操作和IO密集型操作，IO密集的时候要考虑使用异步方法，计算密集的时候要考虑不使用异步方法，避免频繁切换上下文导致计算资源浪费")]),t._v(" "),s("li",[t._v("多线程编程解决一写多读问题可以使用volatile关键词，多写一读就要使用锁了")]),t._v(" "),s("li",[t._v("if-else if语句过多超过3个，可以考虑使用卫语句或者策略模式、状态模式等设计模式重构"),s("br"),t._v("\n···")])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("[1] "),s("a",{attrs:{href:"https://github.com/alibaba/p3c/blob/master/Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E5%B5%A9%E5%B1%B1%E7%89%88%EF%BC%89.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里巴巴Java开发手册（嵩山版）"),s("OutboundLink")],1),s("br"),t._v("\n[2] "),s("a",{attrs:{href:"https://www.jianshu.com/p/4a7948ea742d",target:"_blank",rel:"noopener noreferrer"}},[t._v("C#代码规范要求"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);